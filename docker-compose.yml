services:
    api:
        build:
            context: ./docker/8.3
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        container_name: app
        image: sail-8.3/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - network
        depends_on:
            - db-primary
            - db-secondary-1
            - db-secondary-2

    db-primary:
        image: mongo:7.0
        container_name: db-primary
        command:
            [
                "--replSet",
                "cluester-replica",
                "--bind_ip_all",
                "--port",
                "27017"
            ]
        ports:
            - 27017:27017
        extra_hosts:
            - "host.docker.internal:host-gateway"
        healthcheck:
            test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'cluester-replica',members:[{_id:0,host:'db-primary:27017',priority:1},{_id:1,host:'db-secondary-1:27017',priority:0.5},{_id:2,host:'db-secondary-2:27017',priority:0.5}]}) }" | mongosh --port 27017 --quiet
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 30
        volumes:
            - "db-primary-data:/data/db"
            - "db-primary-config:/data/configdb"
        networks:
            - network

    db-secondary-1:
        image: mongo:7.0
        container_name: db-secondary-1
        command:
            [
                "--replSet",
                "cluester-replica",
                "--bind_ip_all",
                "--port",
                "27017"
            ]
        ports:
            - 27018:27017
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - "db-secondary-1-data:/data/db"
            - "db-secondary-1-config:/data/configdb"
        networks:
            - network

    db-secondary-2:
        image: mongo:7.0
        container_name: db-secondary-2
        command:
            [
                "--replSet",
                "cluester-replica",
                "--bind_ip_all",
                "--port",
                "27017"
            ]
        ports:
            - 27019:27017
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - "db-secondary-2-data:/data/db"
            - "db-secondary-2-config:/data/configdb"
        networks:
            - network

networks:
    network:
        driver: bridge

volumes:
    db-primary-data:
    db-primary-config:
    db-secondary-1-data:
    db-secondary-1-config:
    db-secondary-2-data:
    db-secondary-2-config:
